buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
    }
}


apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'cobertura'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'github-facade'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.springsource.org/libs-snapshot' }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.netflix.rxjava:rxjava-groovy:0.20.4")
    compile("com.netflix.rxjava:rxjava-apache-http:0.19.6")

    compile "com.squareup.retrofit:retrofit:1.9.0"
    compile "com.squareup.retrofit:converter-jackson:1.9.0"
    compile "com.squareup.okhttp:okhttp:2.7.0"
    compile "com.squareup.okhttp:logging-interceptor:2.7.0"

    runtime("org.apache.httpcomponents:httpclient:4.4")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2.2'
    testCompile "com.squareup.okhttp:mockwebserver:2.7.0"
    testCompile "com.squareup.retrofit2:retrofit-mock:2.0.0"

}

defaultTasks 'runBuild'

task copyConfig(type:Copy) {
    File configFile = new File('build/libs/application.yml')
    if(!configFile.exists()) {
        from 'src/main/resources'
        into 'build/libs'
        include '**/*.yml'


        println ":copying applications.yml to build dir"
    }
}

task runBuild(dependsOn:['copyConfig'] , type: Exec) {
    String token = ""
    if(project.hasProperty('apiKey')) {
        token =  "--github.token=$apiKey".toString()
    }

    workingDir 'build/libs'
    commandLine 'java', '-jar', 'github-facade-0.0.1-SNAPSHOT.jar',  token
    println "********************** ${commandLine}"

}


task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
